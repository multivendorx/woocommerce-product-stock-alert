import { useRef, useState } from "react";
import './AutoGeneratedDefaultInput.scss';

const AutoGeneratedDefaultInput = (props) => {
    const {value, proSetting, onChange, description} = props;
    const [copied, setCopied] = useState(false);

    function generateRandomKey( length = 8 ) {
        const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        let key = "";
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            key += characters.charAt(randomIndex);
        }
        return key;
    }

    const generateSSOKey = (e) => {
        e.preventDefault();
        const key = generateRandomKey(8);
        onChange( key );
    }

    const handleCopy = (e) => {
        e.preventDefault();
        navigator.clipboard.writeText(value)
            .then(() => {
                setCopied( true );
            });

            setTimeout(() => {
                setCopied(false);
            }, 2500);
    }

    const handleClear = (e) => {
        e.preventDefault();
        onChange("")
    }

    return (
        <>
            <div className="sso-key-section">
            <div className="input-section">
                <input
                    type="text"
                    value={value}
                    onChange={ (e) => onChange( e.target.value ) }
                />
                { value !== "" &&
                    (
                        <button onClick={ handleClear } className="clear-btn">
                            <i className="adminLib-delete"></i>
                        </button>
                    )
                }
            </div>
            { value !== "" ?
                (
                    <button
                        className="copy-btn"
                        onClick={ handleCopy }
                    >   {copied && <span className="tooltip"><i class="adminLib-success-notification"></i>Copied</span>}
                        <span className="svgIcon">
                            <i class="adminLib-vendor-form-copy"></i>
                        </span>
                    </button>
                )
                :
                (
                    <button
                        className="btn-purple generate-btn"
                        onClick={ generateSSOKey }
                    >
                        <i class="adminLib-star_icon"></i>
                        <span class="text">Generate</span>
                    </button>
                )
            }
            {
                proSetting && <span className="admin-pro-tag">pro</span>
            }
        </div>
        <p className="settings-metabox-description" dangerouslySetInnerHTML={{__html: description}}></p>
        </>
    );
}

export default AutoGeneratedDefaultInput;